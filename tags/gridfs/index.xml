<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gridfs on Daryl&#39;s Blog</title>
    <link>https://siskinc.github.io/tags/gridfs/</link>
    <description>Recent content in gridfs on Daryl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jul 2019 20:25:30 +0000</lastBuildDate><atom:link href="https://siskinc.github.io/tags/gridfs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gin上传文件到MongoDB gridfs</title>
      <link>https://siskinc.github.io/post/gin%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0mongodb_gridfs/</link>
      <pubDate>Thu, 25 Jul 2019 20:25:30 +0000</pubDate>
      
      <guid>https://siskinc.github.io/post/gin%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0mongodb_gridfs/</guid>
      <description>上传图片 func imagePost(c *gin.Context) { image, err := c.FormFile(&amp;#34;file&amp;#34;) if err != nil { errMsg := err.Error() logger.Error(errMsg) autorestapi.RespErr(c, errMsg) return } fileImage, err := image.Open() if err != nil { errMsg := err.Error() logger.Error(errMsg) autorestapi.RespErr(c, errMsg) return } defer fileImage.Close() imageGridFS, err := model.GetGridFS(&amp;#34;image&amp;#34;) if err != nil { errMsg := err.Error() logger.Error(errMsg) autorestapi.RespErr(c, errMsg) return } now := self_time.GetNowTimeStamp() nowStr := strconv.FormatInt(now, 10) file, err := imageGridFS.Create(nowStr) if err !</description>
    </item>
    
  </channel>
</rss>
