<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python3 on Daryl&#39;s Blog</title>
    <link>https://siskinc.github.io/tags/python3/</link>
    <description>Recent content in python3 on Daryl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Aug 2021 10:48:16 +0800</lastBuildDate><atom:link href="https://siskinc.github.io/tags/python3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python3在类的内部使用当前类作为类型提示</title>
      <link>https://siskinc.github.io/post/python3%E5%9C%A8%E7%B1%BB%E7%9A%84%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E5%BD%93%E5%89%8D%E7%B1%BB%E4%BD%9C%E4%B8%BA%E7%B1%BB%E5%9E%8B%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Thu, 19 Aug 2021 10:48:16 +0800</pubDate>
      
      <guid>https://siskinc.github.io/post/python3%E5%9C%A8%E7%B1%BB%E7%9A%84%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E5%BD%93%E5%89%8D%E7%B1%BB%E4%BD%9C%E4%B8%BA%E7%B1%BB%E5%9E%8B%E6%8F%90%E7%A4%BA/</guid>
      <description>问题 在Python3中，例如：构建链表节点类，会有一个指向自身类型的指针，代码如下:
1 2 3 4 5  class ListNode(object): value: int nextNode: ListNode def merge(self, head: ListNode): pass   如果直接写成这样，代码提示器是无法识别到的
解决 Python 3.10以及以后的版本 已经支持该方式
Python 3.7+ 使用feature 1  from __future__ import annotations   Python 3.6以及更旧的版本 直接使用字符串的方式，例如:
1 2 3 4 5  class ListNode(object): value: int nextNode: &amp;#39;ListNode&amp;#39; def merge(self, head: &amp;#39;ListNode&amp;#39;): pass   参考资料 https://stackoverflow.com/questions/33533148/how-do-i-type-hint-a-method-with-the-type-of-the-enclosing-class</description>
    </item>
    
    <item>
      <title>Python3 和 Python2的区别</title>
      <link>https://siskinc.github.io/post/python3_%E5%92%8C_python2%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 25 Jul 2019 17:36:53 +0000</pubDate>
      
      <guid>https://siskinc.github.io/post/python3_%E5%92%8C_python2%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>print   Python2.7的print不是一个function
  Python3里的print是一个function。
  Unicode   Python 2 有 ASCII str() 类型，unicode() 是单独的，不是 byte 类型。
  Python 3，我们最终有了 Unicode (utf-8) 字符串，以及一个字节类：byte 和 bytearrays。
  由于 Python3.X 源码文件默认使用utf-8编码，这就使得以下代码是合法的：
1 2 3 4 5 6 7  &amp;gt;&amp;gt;&amp;gt; 中国 = &amp;#39;china&amp;#39; &amp;gt;&amp;gt;&amp;gt;print(中国) china   Python 2.x
1 2 3 4 5 6 7 8 9 10 11 12 13  &amp;gt;&amp;gt;&amp;gt; str = &amp;#34;我爱北京天安门&amp;#34; &amp;gt;&amp;gt;&amp;gt; str &amp;#39;\xe6\x88\x91\xe7\x88\xb1\xe5\x8c\x97\xe4\xba\xac\xe5\xa4\xa9\xe5\xae\x89\xe9\x97\xa8&amp;#39; &amp;gt;&amp;gt;&amp;gt; str = u&amp;#34;我爱北京天安门&amp;#34; &amp;gt;&amp;gt;&amp;gt; str u&amp;#39;\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8&amp;#39;   Python 3.</description>
    </item>
    
  </channel>
</rss>
