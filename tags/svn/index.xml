<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>svn on Daryl&#39;s Blog</title>
    <link>https://siskinc.github.io/tags/svn/</link>
    <description>Recent content in svn on Daryl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2019 09:49:33 +0000</lastBuildDate><atom:link href="https://siskinc.github.io/tags/svn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>svn branch 创建分支</title>
      <link>https://siskinc.github.io/post/svn_branch_%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF/</link>
      <pubDate>Fri, 26 Jul 2019 09:49:33 +0000</pubDate>
      
      <guid>https://siskinc.github.io/post/svn_branch_%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>svn钩子(hooks)</title>
      <link>https://siskinc.github.io/post/svn%E9%92%A9%E5%AD%90hooks/</link>
      <pubDate>Thu, 25 Jul 2019 20:37:23 +0000</pubDate>
      
      <guid>https://siskinc.github.io/post/svn%E9%92%A9%E5%AD%90hooks/</guid>
      <description>钩子脚本的具体写法就是操作系统中shell脚本程序的写法,请根据自己SVN所在的操作系统和shell程序进行相应的写作
所谓钩子就是与一些版本库事件触发的程序，例如新修订版本的创建，或是未版本化属性的修改。每个钩子都会被告知足够多的信息，包括那是什么事件，所操作的对象，和触发事件的用户名。通过钩子的输出或返回状态，钩子程序能让工作继续、停止或是以某种方式挂起。
svn在每个代码仓库下有一个hooks目录用于放hook脚本, svn为我们提供了模板
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  [root@idcflow2175 hooks]# pwd /home/svn/csvn/data/repositories/tr2/hooks [root@idcflow2175 hooks]# ll -rw-r--r-- 1 svn svn 1977 Jul 1 2013 post-commit.tmpl -rw-r--r-- 1 svn svn 1638 Jul 1 2013 post-lock.tmpl -rw-r--r-- 1 svn svn 2289 Jul 1 2013 post-revprop-change.tmpl -rw-r--r-- 1 svn svn 1567 Jul 1 2013 post-unlock.</description>
    </item>
    
    <item>
      <title>使用Docker搭建svn服务器教程</title>
      <link>https://siskinc.github.io/post/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 25 Jul 2019 20:36:47 +0000</pubDate>
      
      <guid>https://siskinc.github.io/post/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/</guid>
      <description>svn简介 SVN是Subversion的简称，是一个开放源代码的版本控制系统，相较于RCS、CVS，它采用了分支管理系统，它的设计目标就是取代CVS。互联网上很多版本控制服务已从CVS迁移到Subversion。说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。
svn的docker搭建方法   请提前在服务器安装好docker服务
  本篇教程选用的docker镜像为garethflowers/svn-server
  安装并启动容器代码
  1 2 3  docker run --restart always --name svn -d -v /root/dockers/svn:/var/opt/svn -p 3690:3690 garethflowers/svn-server   简析   /root/dockers/svn为宿主机的文件目录，/var/opt/svn为容器内的文件目录
  &amp;ndash;restart always命令可以实现容器在宿主机开机时自启动
  -p 3690:3690表示将宿主机的3690端口映射到容器的3690端口，此端口为svn服务的默认端口，可以根据需要自行修改
  创建svn仓库和账户 进入容器中进行配置 1 2 3  docker exec -it svn /bin/sh   创建名称为svn的资源仓库 1 2 3  svnadmin create svn   创建成功后svn目录内应该包含以下文件:</description>
    </item>
    
  </channel>
</rss>
